@model MyMVCApplication.Models.Student

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StudentId)
        @Html.DisplayFor(model => model.StudentId)


        @*NAME*@
        <div class="form-group">
            @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
            </div>
        </div>

        @*AGE*@
        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>


         @*GENDER*@

         <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">*@
            <div class="col-md-7">
            <label class="radio-inline control-label">
                @Html.RadioButtonFor(model => model.Gender,"Female",new { id = "rbFemale" })
                @Html.Label("rbFemale","Female")
            </label> 
             <label class="radio-inline control-label">
                @Html.RadioButtonFor(model => model.Gender,"Male",new { id = "rbMale" })
                @Html.Label("rbMale","Male")
             </label>  
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>


        @*SCORE*@
        
         <div class="form-group">
            @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
           
            <div class="col-md-7">
            <label class="radio-inline control-label">
                @Html.RadioButtonFor(model => model.Score,1,new { id = "rbOne" })
                @Html.Label("rbOne","One")
            </label> 
             <label class="radio-inline control-label">
                @Html.RadioButtonFor(model => model.Score,2,new { id = "rbTwo" })
                @Html.Label("rbTwo","Two")
             </label>  

             <label class="radio-inline control-label">
                @Html.RadioButtonFor(model => model.Score,3,new { id = "rbThree" })
                @Html.Label("rbThree","Three")
             </label>  

             <label class="radio-inline control-label">
                @Html.RadioButtonFor(model => model.Score,4,new { id = "rbFour" })
                @Html.Label("rbFour","Four")
             </label>  

             <label class="radio-inline control-label">
                 
                @Html.RadioButtonFor(model => model.Score,5,new { id = "rbFive" })
                @Html.Label("rbFive","Five")
             </label>  
               
            </div>
        </div>





       @*<div class="form-group">

            <div class="col-form-legend">ViewBag doesn't require typecasting while retriving values from it...</div>
                     
                                 <div class="form-check">

                                      
                                             <label class="radio-inline control-label">
                                                @Html.RadioButtonFor(model => model.Score,1,new { id = "rbOne1" })
                                                @Html.Label("rbOne1","One")
                                            </label> 
                                             <label class="radio-inline control-label">
                                                @Html.RadioButtonFor(model => model.Score,2,new { id = "rbTwo2" })
                                                @Html.Label("rbTwo2","Two")
                                             </label>  

                                             <label class="radio-inline control-label">
                                                @Html.RadioButtonFor(model => model.Score,3,new { id = "rbThree3" })
                                                @Html.Label("rbThree3","Three")
                                             </label>  

                                             <label class="radio-inline control-label">
                                                @Html.RadioButtonFor(model => model.Score,4,new { id = "rbFour4" })
                                                @Html.Label("rbFour4","Four")
                                             </label>  

                                             <label class="radio-inline radio-info">
                 
                                                @Html.RadioButtonFor(model => model.Score,5,new { id = "rbFive5" })
                                                @Html.Label("rbFive5","Five")
                                             </label> 

                                        
                                 </div>
   
        </div>*@




                


        
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>


    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
